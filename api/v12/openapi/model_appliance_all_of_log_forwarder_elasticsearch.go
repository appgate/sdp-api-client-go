/*
 * AppGate SDP Controller REST API
 *
 * # About   This specification documents the REST API calls for the AppGate SDP Controller.    Please refer to the Integration chapter in the manual or contact AppGate support with any questions about   this functionality. # Getting Started   Requirements for API scripting:   - Access to the peer interface (default port 444) of a Controller appliance.     (https://sdphelp.appgate.com/adminguide/appliances-configure.html?anchor=peer)   - An API user with relevant permissions.     (https://sdphelp.appgate.com/adminguide/administrative-roles-configure.html)   - In order to use the simple login API, Admin MFA must be disabled or the API user must be excluded.     (https://sdphelp.appgate.com/adminguide/mfa-for-admins.html) # Base path   HTTPS requests must be sent to the Peer Interface hostname and port, with **_/admin** path.    For example: **https://appgate.company.com:444/admin**    All requests must have the **Accept** header as:    **application/vnd.appgate.peer-v12+json** # API Conventions   API conventions are  important to understand and follow strictly.    - While updating objects (via PUT), entire object must be sent with all fields.     - For example, if in order to add a remedy method to the condition below:       ```       {         \"id\": \"12699e27-b584-464a-81ee-5b4784b6d425\",         \"name\": \"Test\",         \"notes\": \"Making a point\",         \"tags\": [\"test\", \"tag\"],         \"expression\": \"return true;\",         \"remedyMethods\": []       }       ```     - send the entire object with updated and non-updated fields:       ```       {         \"id\": \"12699e27-b584-464a-81ee-5b4784b6d425\",         \"name\": \"Test\",         \"notes\": \"Making a point\",         \"tags\": [\"test\", \"tag\"],         \"expression\": \"return true;\",         \"remedyMethods\": [{\"type\": \"DisplayMessage\", \"message\": \"test message\"}]       }       ```    - In case Controller returns an error (non-2xx HTTP status code), response body is JSON.     The \"message\" field contains information abot the error.     HTTP 422 \"Unprocessable Entity\" has extra `errors` field to list all the issues with specific fields.    - Empty string (\"\") is considered a different value than \"null\" or field being omitted from JSON.     Omitting the field is recommend if no value is intended.     Empty string (\"\") will be almost always rejected as invalid value.    - There are common pattern between many objects:     - **Configuration Objects**: There are many objects with common fields, namely \"id\", \"name\", \"notes\", \"created\"       and \"updated\". These entities are listed, queried, created, updated and deleted in a similar fashion.     - **Distinguished Name**: Users and Devices are identified with what is called Distinguished Names, as used in        LDAP. The distinguished format that identifies a device and a user combination is        \"CN=\\<Device ID\\>,CN=\\<username\\>,OU=\\<Identity Provider Name\\>\". Some objects have the        \"userDistinguishedName\" field, which does not include the CN for Device ID.        This identifies a user on every device.
 *
 * API version: API version 12
 * Contact: appgatesdp.support@appgate.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"encoding/json"
)

// ApplianceAllOfLogForwarderElasticsearch Elasticsearch endpoint configuration on AWS.
type ApplianceAllOfLogForwarderElasticsearch struct {
	// The URL of the elasticsearch server.
	Url *string `json:"url,omitempty"`
	// AWS ID to login. Only required if AWS Access Keys are being used to authenticate.
	AwsId *string `json:"awsId,omitempty"`
	// AWS secret to login. Only required if AWS Access Keys are being used to authenticate.
	AwsSecret *string `json:"awsSecret,omitempty"`
	// AWS region. Only required if AWS Access Keys are being used to authenticate.
	AwsRegion *string `json:"awsRegion,omitempty"`
	// Whether to use the credentials from the AWS instance or not.
	UseInstanceCredentials *bool `json:"useInstanceCredentials,omitempty"`
	// Optional field to enable log retention on the configured AWS elasticsearch. Defines how many days the audit logs will be kept.
	RetentionDays *int32 `json:"retentionDays,omitempty"`
}

// NewApplianceAllOfLogForwarderElasticsearch instantiates a new ApplianceAllOfLogForwarderElasticsearch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplianceAllOfLogForwarderElasticsearch() *ApplianceAllOfLogForwarderElasticsearch {
	this := ApplianceAllOfLogForwarderElasticsearch{}
	return &this
}

// NewApplianceAllOfLogForwarderElasticsearchWithDefaults instantiates a new ApplianceAllOfLogForwarderElasticsearch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplianceAllOfLogForwarderElasticsearchWithDefaults() *ApplianceAllOfLogForwarderElasticsearch {
	this := ApplianceAllOfLogForwarderElasticsearch{}
	return &this
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *ApplianceAllOfLogForwarderElasticsearch) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplianceAllOfLogForwarderElasticsearch) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *ApplianceAllOfLogForwarderElasticsearch) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *ApplianceAllOfLogForwarderElasticsearch) SetUrl(v string) {
	o.Url = &v
}

// GetAwsId returns the AwsId field value if set, zero value otherwise.
func (o *ApplianceAllOfLogForwarderElasticsearch) GetAwsId() string {
	if o == nil || o.AwsId == nil {
		var ret string
		return ret
	}
	return *o.AwsId
}

// GetAwsIdOk returns a tuple with the AwsId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplianceAllOfLogForwarderElasticsearch) GetAwsIdOk() (*string, bool) {
	if o == nil || o.AwsId == nil {
		return nil, false
	}
	return o.AwsId, true
}

// HasAwsId returns a boolean if a field has been set.
func (o *ApplianceAllOfLogForwarderElasticsearch) HasAwsId() bool {
	if o != nil && o.AwsId != nil {
		return true
	}

	return false
}

// SetAwsId gets a reference to the given string and assigns it to the AwsId field.
func (o *ApplianceAllOfLogForwarderElasticsearch) SetAwsId(v string) {
	o.AwsId = &v
}

// GetAwsSecret returns the AwsSecret field value if set, zero value otherwise.
func (o *ApplianceAllOfLogForwarderElasticsearch) GetAwsSecret() string {
	if o == nil || o.AwsSecret == nil {
		var ret string
		return ret
	}
	return *o.AwsSecret
}

// GetAwsSecretOk returns a tuple with the AwsSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplianceAllOfLogForwarderElasticsearch) GetAwsSecretOk() (*string, bool) {
	if o == nil || o.AwsSecret == nil {
		return nil, false
	}
	return o.AwsSecret, true
}

// HasAwsSecret returns a boolean if a field has been set.
func (o *ApplianceAllOfLogForwarderElasticsearch) HasAwsSecret() bool {
	if o != nil && o.AwsSecret != nil {
		return true
	}

	return false
}

// SetAwsSecret gets a reference to the given string and assigns it to the AwsSecret field.
func (o *ApplianceAllOfLogForwarderElasticsearch) SetAwsSecret(v string) {
	o.AwsSecret = &v
}

// GetAwsRegion returns the AwsRegion field value if set, zero value otherwise.
func (o *ApplianceAllOfLogForwarderElasticsearch) GetAwsRegion() string {
	if o == nil || o.AwsRegion == nil {
		var ret string
		return ret
	}
	return *o.AwsRegion
}

// GetAwsRegionOk returns a tuple with the AwsRegion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplianceAllOfLogForwarderElasticsearch) GetAwsRegionOk() (*string, bool) {
	if o == nil || o.AwsRegion == nil {
		return nil, false
	}
	return o.AwsRegion, true
}

// HasAwsRegion returns a boolean if a field has been set.
func (o *ApplianceAllOfLogForwarderElasticsearch) HasAwsRegion() bool {
	if o != nil && o.AwsRegion != nil {
		return true
	}

	return false
}

// SetAwsRegion gets a reference to the given string and assigns it to the AwsRegion field.
func (o *ApplianceAllOfLogForwarderElasticsearch) SetAwsRegion(v string) {
	o.AwsRegion = &v
}

// GetUseInstanceCredentials returns the UseInstanceCredentials field value if set, zero value otherwise.
func (o *ApplianceAllOfLogForwarderElasticsearch) GetUseInstanceCredentials() bool {
	if o == nil || o.UseInstanceCredentials == nil {
		var ret bool
		return ret
	}
	return *o.UseInstanceCredentials
}

// GetUseInstanceCredentialsOk returns a tuple with the UseInstanceCredentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplianceAllOfLogForwarderElasticsearch) GetUseInstanceCredentialsOk() (*bool, bool) {
	if o == nil || o.UseInstanceCredentials == nil {
		return nil, false
	}
	return o.UseInstanceCredentials, true
}

// HasUseInstanceCredentials returns a boolean if a field has been set.
func (o *ApplianceAllOfLogForwarderElasticsearch) HasUseInstanceCredentials() bool {
	if o != nil && o.UseInstanceCredentials != nil {
		return true
	}

	return false
}

// SetUseInstanceCredentials gets a reference to the given bool and assigns it to the UseInstanceCredentials field.
func (o *ApplianceAllOfLogForwarderElasticsearch) SetUseInstanceCredentials(v bool) {
	o.UseInstanceCredentials = &v
}

// GetRetentionDays returns the RetentionDays field value if set, zero value otherwise.
func (o *ApplianceAllOfLogForwarderElasticsearch) GetRetentionDays() int32 {
	if o == nil || o.RetentionDays == nil {
		var ret int32
		return ret
	}
	return *o.RetentionDays
}

// GetRetentionDaysOk returns a tuple with the RetentionDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplianceAllOfLogForwarderElasticsearch) GetRetentionDaysOk() (*int32, bool) {
	if o == nil || o.RetentionDays == nil {
		return nil, false
	}
	return o.RetentionDays, true
}

// HasRetentionDays returns a boolean if a field has been set.
func (o *ApplianceAllOfLogForwarderElasticsearch) HasRetentionDays() bool {
	if o != nil && o.RetentionDays != nil {
		return true
	}

	return false
}

// SetRetentionDays gets a reference to the given int32 and assigns it to the RetentionDays field.
func (o *ApplianceAllOfLogForwarderElasticsearch) SetRetentionDays(v int32) {
	o.RetentionDays = &v
}

func (o ApplianceAllOfLogForwarderElasticsearch) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	if o.AwsId != nil {
		toSerialize["awsId"] = o.AwsId
	}
	if o.AwsSecret != nil {
		toSerialize["awsSecret"] = o.AwsSecret
	}
	if o.AwsRegion != nil {
		toSerialize["awsRegion"] = o.AwsRegion
	}
	if o.UseInstanceCredentials != nil {
		toSerialize["useInstanceCredentials"] = o.UseInstanceCredentials
	}
	if o.RetentionDays != nil {
		toSerialize["retentionDays"] = o.RetentionDays
	}
	return json.Marshal(toSerialize)
}

type NullableApplianceAllOfLogForwarderElasticsearch struct {
	value *ApplianceAllOfLogForwarderElasticsearch
	isSet bool
}

func (v NullableApplianceAllOfLogForwarderElasticsearch) Get() *ApplianceAllOfLogForwarderElasticsearch {
	return v.value
}

func (v *NullableApplianceAllOfLogForwarderElasticsearch) Set(val *ApplianceAllOfLogForwarderElasticsearch) {
	v.value = val
	v.isSet = true
}

func (v NullableApplianceAllOfLogForwarderElasticsearch) IsSet() bool {
	return v.isSet
}

func (v *NullableApplianceAllOfLogForwarderElasticsearch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplianceAllOfLogForwarderElasticsearch(val *ApplianceAllOfLogForwarderElasticsearch) *NullableApplianceAllOfLogForwarderElasticsearch {
	return &NullableApplianceAllOfLogForwarderElasticsearch{value: val, isSet: true}
}

func (v NullableApplianceAllOfLogForwarderElasticsearch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplianceAllOfLogForwarderElasticsearch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
